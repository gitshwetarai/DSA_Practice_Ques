/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorder(TreeNode* root, vector<int> &elements)
    {
        if(root == NULL)
            return elements;

        inorder(root->left, elements);
        elements.push_back(root->val);
        inorder(root->right, elements);

        return elements;
    }

    bool findTarget(TreeNode* root, int k) {
        
        vector<int> elements;
        inorder(root, elements);

        int i = 0;
        int j = elements.size()-1;

        while(i < j)
        {
            int sum = elements[i] + elements[j];

            if(sum == k)
                return true;
            else if(sum < k)
                i++;
            else
                j--;
        }
        return false;
    }
};
