By level order technique.

TreeNode* addOneRow(TreeNode* root, int val, int depth) {

        if(depth == 1)
        {
            TreeNode *newnode = new TreeNode(val);
            newnode->left = root;
            return newnode;
        }

        queue<TreeNode *> q;
        q.push(root);

        while(depth>2)
        {
            vector<int> v;
            int size = q.size();
            for(int i=0; i<size; i++)
            {
                TreeNode *curr = q.front(); q.pop();
                v.push_back(curr->val);
                
                if(curr->left != NULL)
                    q.push(curr->left);
                if(curr->right != NULL)
                    q.push(curr->right);
            }
            depth--;
        }
        while(q.size()>0)
        {
            TreeNode *curr = q.front(); q.pop();
            TreeNode *temp = curr->left;
            curr->left = new TreeNode(val);
            curr->left->left = temp;
            temp = curr->right;
            curr->right = new TreeNode(val);
            curr->right->right = temp;
        }
        return root;
    }
