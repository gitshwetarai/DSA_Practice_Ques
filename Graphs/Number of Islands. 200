class Solution {
public:

    void dfs(int i, int j, vector<vector<char>>& grid, int n, int m) {
        if(i<0 || j<0 || i>=n || j>=m || grid[i][j]=='0')
            return;

        grid[i][j] = '0';

        //up
        dfs(i-1,j,grid,n,m);
        //bottom
        dfs(i+1,j,grid,n,m);
        //right
        dfs(i,j+1,grid,n,m);
        //left
        dfs(i,j-1,grid,n,m);
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        int count = 0;
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(grid[i][j]=='1')
                {
                    count++;
                    dfs(i,j,grid,n,m);
                }
            }
        }
        return count;
    }
};
